apiVersion: v1
kind: Namespace
metadata:
  name: sacheender

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-todo
  namespace: sacheender
spec:
  replicas: 3
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: todoapp
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: todoapp
    spec:
      containers:
        - name: todoapp
          image: talwarsachin4/todoapi:1.0
          env:
            - name: MYSQL_HOST
              value: svc-db-clusterip.tododev.svc.cluster.local
            - name: MYSQL_USER
              value: root
            - name: MYSQL_PASSWORD
              value: P@ssw0rd
            - name: MYSQL_DATABASE
              value: tododb
          ports:
            - containerPort: 80

---

apiVersion: v1
kind: Service
metadata:
  name: svc-db-clusterip
  namespace: sacheender
spec:
  type: ClusterIP
  selector:
    app: tododb
  ports:
    - port: 3306
      targetPort: 3306

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-todo-db
  namespace: sacheender
spec:
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app: tododb
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: tododb
    spec:
      containers:
        - name: tododb
          image: talwarsachin4/mysql:2.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: P@ssw0rd
            - name: MYSQL_DATABASE
              value: tododb
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysqldb
              mountPath: /var/lib/mysql
      nodeSelector:
        gpu: nvidia
      volumes:
        - name: mysqldb
          persistentVolumeClaim:
            claimName: html

---

apiVersion: v1
kind: Service
metadata:
  name: svc-app-lb
  namespace: sacheender
spec:
  type: LoadBalancer
  selector:
    app: todoapp
  ports:
    - port: 80
      targetPort: 80

---

kind: PersistentVolume
apiVersion: v1
metadata:
  name: html
  labels:
    type: hostpath
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  storageClassName: html
  persistentVolumeReclaimPolicy: Delete
  hostPath:
    type: DirectoryOrCreate
    path: "/tmp/html"

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: html
  namespace: sacheender
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: html
  resources:
    requests:
      storage: 1Gi